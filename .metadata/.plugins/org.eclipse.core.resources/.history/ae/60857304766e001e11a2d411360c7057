package requestBodyType;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.equalTo;

import org.json.JSONObject;
import org.testng.annotations.Ignore;
import org.testng.annotations.Test;

public class RequestPayLoadUsingPOJO {

	int id= 0;
	@Test // @Ignore
	void testPostUsingPOJOclass() {

		Pojo_PostRequest data = new Pojo_PostRequest();
		data.setName("Keerthi");
		data.setJob("Develofer");

		given().contentType("application/json").body(data).when().post("https://reqres.in/api/users").then()
				.statusCode(201).body("name", equalTo("Kiran")).body("job", equalTo("Kiranjob"))
				.header("Content-Type", "application/json; charset=utf-8").log().all();
	}

//	@Test (priority=1)
	void createAndStoreIDUsingPOJOclass() {

		JSONObject data = new JSONObject();

		data.put("name", "Kiran");
		data.put("job", "Kiranjob");

		given().contentType("application/json").body(data.toString()).when().post("https://reqres.in/api/users").then()
				.statusCode(201).body("name", equalTo("Kiran")).body("job", equalTo("Kiranjob"))
				.header("Content-Type", "application/json; charset=utf-8").log().all();
	}

//	@Test(priority = 2, dependsOnMethods = { "creatDataJSONlibraryStoreID" })
	void deleteData() {
		given().when().delete("https://reqres.in/api/users/" + id).then().statusCode(204).log().all();

	}

}
