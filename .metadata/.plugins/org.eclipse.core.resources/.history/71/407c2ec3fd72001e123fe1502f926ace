package authorization;

import org.testng.annotations.Test;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import _2_requestBodyType.Pojo_PayloadRequest;
import io.restassured.matcher.RestAssuredMatchers;
import io.restassured.module.jsv.JsonSchemaValidator;

import static io.restassured.RestAssured.given;

import java.io.File;
import static org.hamcrest.Matchers.equalTo;

public class Authentication {

//	@Test
	void baicAuthentication() {
		given().auth().basic("postman", "password").when().get("https://postman-echo.com/basic-auth").then()
				.statusCode(200).body("authenticated", equalTo(true)).log().all();
	}

//	@Test
	void digestAuthentication() {
		given().auth().digest("postman", "password")
		.when().get("https://postman-echo.com/basic-auth").then()
				.statusCode(200).body("authenticated", equalTo(true)).log().all();

	}

	@Test
	void preemptiveAuthentication() {
		given().auth().preemptive().
		.digest("postman", "password")
//		.basic("postman", "password")
		.when().get("https://postman-echo.com/basic-auth").then()
				.statusCode(200).body("authenticated", equalTo(true)).log().all();

	}

}
