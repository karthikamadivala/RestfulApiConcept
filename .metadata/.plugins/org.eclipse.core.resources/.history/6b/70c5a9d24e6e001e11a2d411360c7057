package introduction;

import org.testng.annotations.Ignore;
import org.testng.annotations.Test;

import static io.restassured.RestAssured.*;
import static io.restassured.matcher.RestAssuredMatchers.*;
import static org.hamcrest.Matchers.*;

import java.util.HashMap;

import io.restassured.module.jsv.JsonSchemaValidator.*;

public class HttpRequests {
	int id = 0;

	@Test
	@Ignore
	void getUsers() {
		given().when().get("https://reqres.in/api/users?page=2").then().statusCode(200).body("page", equalTo(2)).log()
				.all();
	}

	@Test
	@Ignore
	void createUser() {

		HashMap data = new HashMap();
		data.put("name", "Karthik");
		data.put("job", "Tester");

		given().contentType("application/json").body(data).when().post("https://reqres.in/api/users").then()
				.statusCode(201).log().all();
	}

	@Test(priority = 1)
	void createUseraAndGetID() {

		HashMap data = new HashMap();
		data.put("name", "Karthik");
		data.put("job", "Tester");

		id = given().contentType("application/json").body(data).when().post("https://reqres.in/api/users").jsonPath()
				.getInt("id");

		System.out.println("User iD is= " + id);
	}

	@Test(priority = 2, dependsOnMethods = { "createUseraAndGetID" })
	void updateUser() {

		HashMap data = new HashMap();
		data.put("name", "UpdatedName");
		data.put("job", "UpdatedJob");

		given().contentType("application/json").body(data).when().put("https://reqres.in/api/users/" + id).then()
				.statusCode(200).log().all();

	}

	@Test(priority = 3, dependsOnMethods = { "updateUser" })
	void deleteUser() {
		given().when().delete("https://reqres.in/api/users/" + id).then().statusCode(204).log().all();

	}
}
/*
 * Dependencies rest-assured json-path json gson testng scribejava-apis
 * json-schema-validator xml-schema-validator
 */